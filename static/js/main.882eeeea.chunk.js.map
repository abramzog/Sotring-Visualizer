{"version":3,"sources":["components/SortingMenu.js","components/Visualizer.js","App.js","serviceWorker.js","index.js"],"names":["SortingMenu","className","onClick","props","get_array","bubble_sort","insertion_sort","selection_sort","quick_sort","merge_sort","Component","changeColor","bar1","bar2","color","style","backgroundColor","tmp","height","Visualizer","state","array","status","this","numbOfBars","window","screen","width","i","push","Math","floor","random","setState","Array","from","document","getElementsByClassName","forEach","element","text","button","innerText","change_style","arr","slice","animations","bubble_sort_and_push","animate","revert_style","length","j","insertion_sort_and_push","curr","change","pushGreen","selection_sort_and_push","minIndex","quick_sort_helper","low","high","mid","partition","tmp_pivot","merge_sort_helper","merge_sort_animate","merge_helper","new_array","k","diff","pop","Promise","resolve","colors","bars","interval","setInterval","animation","clearInterval","map","bar","idx","key","bubble_sort_visualize","insertion_sort_visualize","selection_sort_visualize","quick_sort_visulaize","merge_sort_visualize","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.882eeeea.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SortingMenu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    <li><button className=\"sort_button\" \r\n                        onClick={() => {\r\n                            this.props.get_array();\r\n                        }}>Change Array\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sort_button\" \r\n                        onClick={() => {\r\n                            this.props.bubble_sort(\"Bubble Sort\");\r\n                        }}>Bubble Sort\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sort_button\" \r\n                        onClick={() => {\r\n                            this.props.insertion_sort(\"Insertion Sort\");\r\n                        }}>Insertion Sort\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sort_button\" \r\n                        onClick={() => {\r\n                            this.props.selection_sort(\"Selection Sort\");\r\n                        }}>Selection Sort\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sort_button\" \r\n                        onClick={() => {\r\n                            this.props.quick_sort(\"Quick Sort\");\r\n                        }}>Quick Sort\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sort_button\" \r\n                        onClick={() => {\r\n                            this.props.merge_sort(\"Merge Sort\");\r\n                        }}>Merge Sort\r\n                        </button>\r\n                    </li>\r\n                    \r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortingMenu;\r\n","import React, { Component } from 'react';\r\nimport './Visualizer.css';\r\nimport SortingMenu from './SortingMenu';\r\n\r\nclass Visualizer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            status: false\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.get_array();\r\n    }\r\n\r\n    get_array() {\r\n        const numbOfBars = window.screen.width*0.8/10;\r\n        const array = [];\r\n        for(let i = 0; i < numbOfBars; i++) {\r\n            array.push(Math.floor(Math.random() * 450) + 10);\r\n        }\r\n        this.setState({array: array});\r\n    }\r\n\r\n    new_array() {\r\n        if(this.state.status === false) {\r\n            const bars = Array.from(document.getElementsByClassName(\"bar\"));\r\n            bars.forEach(element => {\r\n                element.style.backgroundColor = 'bisque';\r\n            });\r\n            this.get_array();\r\n        }\r\n    }\r\n\r\n    change_style(text) {\r\n        const buttons = Array.from(document.getElementsByClassName(\"sort_button\"));\r\n        buttons.forEach(button => {\r\n            if(button.innerText !== text) {\r\n                button.className = \"grey_button\";\r\n            }\r\n        })\r\n    }\r\n\r\n    revert_style() {\r\n        const buttons = Array.from(document.getElementsByClassName(\"grey_button\"));\r\n        buttons.forEach(button => {\r\n            button.className = \"sort_button\";\r\n        })\r\n    }\r\n\r\n    async bubble_sort_visualize(text) {\r\n        if(this.state.status === false) {\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = this.bubble_sort_and_push([], arr);\r\n            await this.animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n\r\n        }\r\n    }\r\n\r\n    bubble_sort_and_push(animations, arr) {\r\n        for(let i=0; i < arr.length - 1; i++) {\r\n            for(let j=0; j < arr.length - i - 1; j++) {\r\n                animations.push([j, j+1, 0]);\r\n                if(arr[j] > arr[j+1]) {\r\n                    animations.push([j, j+1, 1]);\r\n                    const tmp = arr[j+1];\r\n                    arr[j+1] = arr[j];\r\n                    arr[j] = tmp;\r\n                }\r\n                animations.push([j, j+1, 2]);\r\n            }\r\n            animations.push([arr.length - 1 - i, arr.length - 1 - i, 3]);\r\n        }\r\n        animations.push([0,0,3]);\r\n        return animations;\r\n    }\r\n\r\n    async insertion_sort_visualize(text) {\r\n        if(this.state.status === false) {\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = this.insertion_sort_and_push([], arr);\r\n            await this.animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n        }\r\n    }\r\n\r\n    insertion_sort_and_push(animations, arr) {\r\n        for(let i=1; i < arr.length; i++) {\r\n            let curr = arr[i];\r\n            let change = false;\r\n            let j = i -1;\r\n            while(j >= 0 && curr < arr[j]) {\r\n                animations.push([j, j+1, 0]);\r\n                animations.push([j, j+1, 1]);\r\n                animations.push([j, j+1, 2]);\r\n                change = true;\r\n                arr[j+1] = arr[j];\r\n                j--;\r\n            }\r\n            if(change === false) {\r\n                animations.push([j, j+1, 0]);\r\n                animations.push([j, j+1, 2]);\r\n            }\r\n            else{\r\n                arr[j+1] = curr;\r\n            }\r\n        }\r\n        this.pushGreen(arr, animations);\r\n        return animations;\r\n    }\r\n\r\n    pushGreen(arr, animations) {\r\n        for(let i=0; i < arr.length; i++) {\r\n            animations.push([i,i,3]);\r\n        }\r\n    }\r\n\r\n    async selection_sort_visualize(text) {\r\n        if(this.state.status === false) {\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = this.selection_sort_and_push([], arr);\r\n            await this.animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n        }\r\n    }\r\n\r\n    selection_sort_and_push(animations, arr) {\r\n        for(let i=0; i < arr.length; i++) {\r\n            let minIndex = i;\r\n            for(let j = i+1; j < arr.length; j++) {\r\n                animations.push([minIndex, j, 0]);\r\n                animations.push([minIndex, j, 2]);\r\n                if(arr[minIndex] > arr[j]) {\r\n                    minIndex = j;\r\n                }\r\n            }\r\n            animations.push([minIndex, i, 1]);\r\n            animations.push([minIndex, i, 2]);\r\n            const tmp = arr[i];\r\n            arr[i] = arr[minIndex];\r\n            arr[minIndex] = tmp;\r\n            animations.push([i,i,3]);\r\n        }          \r\n        return animations;\r\n    }\r\n\r\n    async quick_sort_visulaize(text) {\r\n        if(this.state.status === false) {\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = this.quick_sort_helper([], arr, 0, arr.length - 1);\r\n            this.pushGreen(arr, animations);\r\n            await this.animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n        }\r\n        \r\n    }\r\n\r\n    quick_sort_helper(animations, arr, low, high) {\r\n        if(low < high) {\r\n            const mid = this.partition(animations, arr, low, high);\r\n            this.quick_sort_helper(animations, arr, low, mid - 1);\r\n            this.quick_sort_helper(animations, arr, mid + 1, high);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    partition(animations, arr, low, high) {\r\n        const pivot = high;\r\n        const tmp_pivot = arr[pivot];\r\n        low--;        \r\n        for(let i = low+1; i < high; i++) {\r\n            animations.push([i,high,0]);\r\n            if(arr[i] < arr[high]) {\r\n                low++;\r\n                if(low !== i) {\r\n                    animations.push([low, i, 1]);\r\n                    animations.push([low, i, 2]);\r\n                    const tmp = arr[low];\r\n                    arr[low] = arr[i];\r\n                    arr[i] = tmp;\r\n                }\r\n            }\r\n            animations.push([i,high,2]);\r\n        }\r\n        low++;\r\n        if(low !== high) {\r\n            animations.push([low, high, 1]);\r\n            animations.push([low, high, 2]);\r\n            arr[high] = arr[low];\r\n            arr[low] = tmp_pivot;\r\n        }\r\n        animations.push([low,low,3]);\r\n        return low;\r\n    }\r\n\r\n    async merge_sort_visualize(text) {\r\n        if(this.state.status === false) {\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = [];\r\n            this.merge_sort_helper(animations, arr, 0, arr.length - 1);\r\n            this.pushGreen(arr, animations);\r\n            await this.merge_sort_animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n        }\r\n    }\r\n\r\n    merge_sort_helper(animations, arr, low, high) {\r\n        if(low < high) {\r\n            const mid = Math.floor(low + (high-low)/2);\r\n            this.merge_sort_helper(animations, arr, low, mid);\r\n            this.merge_sort_helper(animations, arr, mid+1, high);\r\n            this.merge_helper(animations, arr, low, mid, high);\r\n        }\r\n    }\r\n\r\n    merge_helper(animations, arr, low, mid, high) {\r\n        const new_array= [];\r\n        let i = low;\r\n        let k = low;\r\n        let j = mid+1;\r\n        while(i <= mid && j <= high) {\r\n            animations.push([k,j,0]);\r\n            if(arr[i] <= arr[j]) {\r\n                animations.push([k,j,2]);\r\n                new_array.push(arr[i]);\r\n                i++;\r\n                k++;\r\n            } else {\r\n                const diff = j - k;\r\n                animations.push([j, j - diff, 1]);\r\n                animations.push([j, j - diff, -1]);\r\n                new_array.push(arr[j]);\r\n                j++;\r\n                k++;\r\n            }\r\n        }\r\n        while(i <= mid) {\r\n            new_array.push(arr[i]);\r\n            i++;\r\n        }\r\n        while(j <= high) {\r\n            new_array.push(arr[j]);\r\n            j++;\r\n        }\r\n        while(high >= low) {\r\n            arr[high] = new_array.pop();\r\n            high--;\r\n        }\r\n    }\r\n\r\n    merge_sort_animate(animations) {\r\n        return new Promise(resolve => {  \r\n            const colors = ['blue', 'red', 'bisque', '#80ff80'];\r\n            const bars = document.getElementsByClassName(\"bar\");\r\n            let i = 0;\r\n            const intervalHandler = function() {\r\n                const animation = animations[i];\r\n                let j = animation[0];\r\n                let k = animation[1];\r\n                let color = animation[2];\r\n                if(color === 0 || color === 2 || color === 3) {\r\n                    changeColor(bars[k], bars[j], colors[color]);\r\n                }\r\n                else{\r\n                    if(color === -1) {\r\n                        color = 2;\r\n                    }\r\n                    while(k < j) {\r\n                        changeColor(bars[j], bars[j-1], colors[color]);\r\n                        j--;\r\n                    }\r\n                }\r\n                i++;\r\n                if(i === animations.length) {\r\n                    window.clearInterval(interval);\r\n                    resolve();\r\n                }\r\n            }\r\n            const interval = window.setInterval(intervalHandler,1);\r\n        })\r\n    }\r\n\r\n    animate(animations) {  \r\n        return new Promise(resolve => {  \r\n            const colors = ['blue', 'red', 'bisque', '#80ff80'];\r\n            const bars = document.getElementsByClassName(\"bar\");\r\n            let i = 0;\r\n            const intervalHandler = function() {\r\n                const animation = animations[i];\r\n                const bar1 = bars[animation[0]];\r\n                const bar2 = bars[animation[1]];\r\n                const color = colors[animation[2]];\r\n                changeColor(bar1, bar2, color);\r\n                i++;\r\n                if(i === animations.length) {\r\n                    window.clearInterval(interval);\r\n                    resolve();\r\n                }\r\n            }\r\n            const interval = window.setInterval(intervalHandler,1);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let arr = this.state.array.map((bar,idx) => \r\n        <ul className=\"bar\" key={idx} style={{\r\n            height: `${bar}px`\r\n          }}\r\n        ></ul>);\r\n\r\n        return (\r\n            \r\n            <div className=\"container\">\r\n                <SortingMenu \r\n                    get_array = {() => this.new_array()}\r\n                    bubble_sort = {(text) => this.bubble_sort_visualize(text)}\r\n                    insertion_sort = {(text) => this.insertion_sort_visualize(text)}\r\n                    selection_sort = {(text) => this.selection_sort_visualize(text)}\r\n                    quick_sort = {(text) => this.quick_sort_visulaize(text)}\r\n                    merge_sort = {(text) => this.merge_sort_visualize(text)}\r\n                />\r\n                <div className=\"array\">{arr}</div>\r\n            </div>  \r\n        );\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nfunction changeColor(bar1, bar2, color) {\r\n    bar1.style.backgroundColor = color;\r\n    bar2.style.backgroundColor = color;\r\n    if(color === 'red') {\r\n        const tmp = bar1.style.height;\r\n        bar1.style.height = bar2.style.height;\r\n        bar2.style.height = tmp; \r\n    }\r\n}\r\n\r\nexport default Visualizer;\r\n","import React from 'react';\nimport './App.css';\nimport Visualizer from './components/Visualizer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer></Visualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}