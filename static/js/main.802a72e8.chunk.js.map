{"version":3,"sources":["components/SortingMenu.js","components/Visualizer.js","App.js","serviceWorker.js","index.js"],"names":["SortingMenu","className","onClick","props","get_array","bubble_sort","insertion_sort","selection_sort","quick_sort","merge_sort","Component","changeColor","bar1","bar2","color","style","backgroundColor","tmp","height","Visualizer","state","array","status","this","numbOfBars","window","screen","width","i","push","Math","floor","random","setState","Array","from","document","getElementsByClassName","forEach","element","text","button","innerText","opacity","change_style","arr","slice","animations","bubble_sort_and_push","animate","revert_style","length","j","insertion_sort_and_push","curr","change","pushGreen","selection_sort_and_push","minIndex","quick_sort_helper","low","high","mid","partition","tmp_pivot","merge_sort_helper","merge_sort_animate","merge_helper","new_array","k","diff","pop","Promise","resolve","colors","bars","interval","setInterval","animation","clearInterval","map","bar","idx","key","bubble_sort_visualize","insertion_sort_visualize","selection_sort_visualize","quick_sort_visulaize","merge_sort_visualize","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.802a72e8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SortingMenu extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    <li><button className=\"sortButton\" \r\n                        onClick={() =>{\r\n                            this.props.get_array();\r\n                        }}>Get Array\r\n                        </button>\r\n                    </li>\r\n                    \r\n                    <li><button className=\"sortButton\"\r\n                        onClick={() =>{\r\n                            this.props.bubble_sort(\"Bubble Sort\");\r\n                        }}>Bubble Sort\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sortButton\" \r\n                        onClick={() =>{\r\n                            this.props.insertion_sort(\"Insertion Sort\");\r\n                        }}>Insertion Sort\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sortButton\" \r\n                        onClick={() =>{\r\n                            this.props.selection_sort(\"Selection Sort\");\r\n                        }}>Selection Sort\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sortButton\" \r\n                        onClick={() =>{\r\n                            this.props.quick_sort(\"Quick Sort\");\r\n                        }}>Quick Sort\r\n                        </button>\r\n                    </li>\r\n\r\n                    <li><button className=\"sortButton\" \r\n                        onClick={() =>{\r\n                            this.props.merge_sort(\"Merge Sort\");\r\n                        }}>Merge Sort\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortingMenu;\r\n","import React, { Component } from 'react';\r\nimport './Visualizer.css';\r\nimport SortingMenu from './SortingMenu';\r\n\r\nclass Visualizer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            array: [],\r\n            status: false\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.get_array();\r\n    }\r\n\r\n    get_array(){\r\n        const numbOfBars = window.screen.width*0.8/10;\r\n        const array = [];\r\n        for(let i = 0; i < numbOfBars; i++){\r\n            array.push(Math.floor(Math.random() * 450) + 10);\r\n        }\r\n        this.setState({array: array});\r\n    }\r\n\r\n    new_array(){\r\n        if(this.state.status === false){\r\n            const bars = Array.from(document.getElementsByClassName(\"bar\"));\r\n            bars.forEach(element => {\r\n                element.style.backgroundColor = 'bisque';\r\n            });\r\n            this.get_array();\r\n        }\r\n    }\r\n\r\n    change_style(text){\r\n        const buttons = Array.from(document.getElementsByClassName(\"sortButton\"));\r\n        buttons.forEach(button => {\r\n            if(button.innerText !== text){\r\n                button.style.backgroundColor = 'grey'; \r\n                button.style.opacity= 0.2;\r\n            }\r\n        })\r\n    }\r\n\r\n    revert_style(){\r\n        const buttons = Array.from(document.getElementsByClassName(\"sortButton\"));\r\n        buttons.forEach(button => {\r\n            button.style = \"sortButton\";\r\n        })\r\n    }\r\n\r\n\r\n    async bubble_sort_visualize(text){\r\n        if(this.state.status === false){\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = this.bubble_sort_and_push([], arr);\r\n            await this.animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n\r\n        }\r\n    }\r\n\r\n    bubble_sort_and_push(animations, arr){\r\n        for(let i=0; i < arr.length - 1; i++){\r\n            for(let j=0; j < arr.length - i - 1; j++){\r\n                animations.push([j, j+1, 0]);\r\n                if(arr[j] > arr[j+1]){\r\n                    animations.push([j, j+1, 1]);\r\n                    const tmp = arr[j+1];\r\n                    arr[j+1] = arr[j];\r\n                    arr[j] = tmp;\r\n                }\r\n                animations.push([j, j+1, 2]);\r\n            }\r\n            animations.push([arr.length - 1 - i, arr.length - 1 - i, 3]);\r\n        }\r\n        animations.push([0,0,3]);\r\n        return animations;\r\n    }\r\n\r\n\r\n    async insertion_sort_visualize(text){\r\n        if(this.state.status === false){\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = this.insertion_sort_and_push([], arr);\r\n            await this.animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n        }\r\n    }\r\n\r\n    insertion_sort_and_push(animations, arr){\r\n        for(let i=1; i < arr.length; i++){\r\n            let curr = arr[i];\r\n            let change = false;\r\n            let j = i -1;\r\n            while(j >= 0 && curr < arr[j]){\r\n                animations.push([j, j+1, 0]);\r\n                animations.push([j, j+1, 1]);\r\n                animations.push([j, j+1, 2]);\r\n                change = true;\r\n                arr[j+1] = arr[j];\r\n                j--;\r\n            }\r\n            if(change === false){\r\n                animations.push([j, j+1, 0]);\r\n                animations.push([j, j+1, 2]);\r\n            }\r\n            else{\r\n                arr[j+1] = curr;\r\n            }\r\n        }\r\n        this.pushGreen(arr, animations);\r\n        return animations;\r\n    }\r\n\r\n    pushGreen(arr, animations){\r\n        for(let i=0; i < arr.length; i++){\r\n            animations.push([i,i,3]);\r\n        }\r\n    }\r\n\r\n    async selection_sort_visualize(text){\r\n        if(this.state.status === false){\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = this.selection_sort_and_push([], arr);\r\n            await this.animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n        }\r\n    }\r\n\r\n    selection_sort_and_push(animations, arr){\r\n        for(let i=0; i < arr.length; i++){\r\n            let minIndex = i;\r\n            for(let j = i+1; j < arr.length; j++){\r\n                animations.push([minIndex, j, 0]);\r\n                animations.push([minIndex, j, 2]);\r\n                if(arr[minIndex] > arr[j]){\r\n                    minIndex = j;\r\n                }\r\n            }\r\n            animations.push([minIndex, i, 1]);\r\n            animations.push([minIndex, i, 2]);\r\n            const tmp = arr[i];\r\n            arr[i] = arr[minIndex];\r\n            arr[minIndex] = tmp;\r\n            animations.push([i,i,3]);\r\n        }          \r\n        return animations;\r\n    }\r\n\r\n    async quick_sort_visulaize(text){\r\n        if(this.state.status === false){\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = this.quick_sort_helper([], arr, 0, arr.length - 1);\r\n            this.pushGreen(arr, animations);\r\n            await this.animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n        }\r\n        \r\n    }\r\n\r\n    quick_sort_helper(animations, arr, low, high){\r\n        if(low < high){\r\n            const mid = this.partition(animations, arr, low, high);\r\n            this.quick_sort_helper(animations, arr, low, mid - 1);\r\n            this.quick_sort_helper(animations, arr, mid + 1, high);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    partition(animations, arr, low, high){\r\n        const pivot = high;\r\n        const tmp_pivot = arr[pivot];\r\n        low--;        \r\n        for(let i = low+1; i < high; i++){\r\n            animations.push([i,high,0]);\r\n            if(arr[i] < arr[high]){\r\n                low++;\r\n                if(low !== i){\r\n                    animations.push([low, i, 1]);\r\n                    animations.push([low, i, 2]);\r\n                    const tmp = arr[low];\r\n                    arr[low] = arr[i];\r\n                    arr[i] = tmp;\r\n                }\r\n            }\r\n            animations.push([i,high,2]);\r\n        }\r\n        low++;\r\n        if(low !== high){\r\n            animations.push([low, high, 1]);\r\n            animations.push([low, high, 2]);\r\n            arr[high] = arr[low];\r\n            arr[low] = tmp_pivot;\r\n        }\r\n        animations.push([low,low,3]);\r\n        return low;\r\n    }\r\n\r\n    async merge_sort_visualize(text){\r\n        if(this.state.status === false){\r\n            this.change_style(text);\r\n            this.setState({status: true});\r\n            const arr = this.state.array.slice();\r\n            const animations = [];\r\n            this.merge_sort_helper(animations, arr, 0, arr.length - 1);\r\n            this.pushGreen(arr, animations);\r\n            await this.merge_sort_animate(animations);\r\n            this.setState({array: arr, status: false});\r\n            this.revert_style();\r\n        }\r\n    }\r\n\r\n    merge_sort_helper(animations, arr, low, high){\r\n        if(low < high){\r\n            const mid = Math.floor(low + (high-low)/2);\r\n            this.merge_sort_helper(animations, arr, low, mid);\r\n            this.merge_sort_helper(animations, arr, mid+1, high);\r\n            this.merge_helper(animations, arr, low, mid, high);\r\n        }\r\n        //this.setState({array: arr});\r\n    }\r\n\r\n    merge_helper(animations, arr, low, mid, high){\r\n        const new_array= [];\r\n        let i = low;\r\n        let k = low;\r\n        let j = mid+1;\r\n        while(i <= mid && j <= high){\r\n            animations.push([k,j,0]);\r\n            if(arr[i] <= arr[j]){\r\n                animations.push([k,j,2]);\r\n                new_array.push(arr[i]);\r\n                i++;\r\n                k++;\r\n                \r\n            } else{\r\n                const diff = j - k;\r\n                animations.push([j, j - diff, 1]);\r\n                animations.push([j, j - diff, -1]);\r\n                new_array.push(arr[j]);\r\n                j++;\r\n                k++;\r\n            }\r\n        }\r\n        while(i <= mid){\r\n            new_array.push(arr[i]);\r\n            i++;\r\n        }\r\n        while(j <= high){\r\n            new_array.push(arr[j]);\r\n            j++;\r\n        }\r\n        while(high >= low){\r\n            arr[high] = new_array.pop();\r\n            high--;\r\n        }\r\n    }\r\n\r\n    merge_sort_animate(animations){\r\n        return new Promise(resolve => {  \r\n            const colors = ['blue', 'red', 'bisque', '#80ff80'];\r\n            const bars = document.getElementsByClassName(\"bar\");\r\n            let i = 0;\r\n            const intervalHandler = function(){\r\n                const animation = animations[i];\r\n                let j = animation[0];\r\n                let k = animation[1];\r\n                let color = animation[2];\r\n                if(color === 0 || color === 2 || color === 3){\r\n                    changeColor(bars[k], bars[j], colors[color]);\r\n                }\r\n                else{\r\n                    if(color === -1){\r\n                        color = 2;\r\n                    }\r\n                    while(k < j){\r\n                        changeColor(bars[j], bars[j-1], colors[color]);\r\n                        j--;\r\n                    }\r\n                }\r\n                i++;\r\n                if(i === animations.length){\r\n                    window.clearInterval(interval);\r\n                    resolve();\r\n                }\r\n            }\r\n            const interval = window.setInterval(intervalHandler,3);\r\n        })\r\n    }\r\n\r\n    animate(animations){  \r\n        return new Promise(resolve => {  \r\n            const colors = ['blue', 'red', 'bisque', '#80ff80'];\r\n            const bars = document.getElementsByClassName(\"bar\");\r\n            let i = 0;\r\n            const intervalHandler = function(){\r\n                const animation = animations[i];\r\n                const bar1 = bars[animation[0]];\r\n                const bar2 = bars[animation[1]];\r\n                const color = colors[animation[2]];\r\n                changeColor(bar1, bar2, color);\r\n                i++;\r\n                if(i === animations.length){\r\n                    window.clearInterval(interval);\r\n                    resolve();\r\n                }\r\n            }\r\n            const interval = window.setInterval(intervalHandler,3);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let arr = this.state.array.map((bar,idx) => \r\n        <ul className=\"bar\" key={idx} style={{\r\n            height: `${bar}px`\r\n          }}\r\n        ></ul>);\r\n\r\n        return (\r\n            \r\n            <div className=\"container\">\r\n                <SortingMenu \r\n                    get_array = {() => this.new_array()}\r\n                    bubble_sort = {(text) => this.bubble_sort_visualize(text)}\r\n                    insertion_sort = {(text) => this.insertion_sort_visualize(text)}\r\n                    selection_sort = {(text) => this.selection_sort_visualize(text)}\r\n                    quick_sort = {(text) => this.quick_sort_visulaize(text)}\r\n                    merge_sort = {(text) => this.merge_sort_visualize(text)}\r\n                />\r\n                <div className=\"array\">{arr}</div>\r\n            </div>  \r\n        );\r\n    }\r\n\r\n    \r\n\r\n}\r\n\r\nfunction changeColor(bar1, bar2, color){\r\n    bar1.style.backgroundColor = color;\r\n    bar2.style.backgroundColor = color;\r\n    if(color === 'red'){\r\n        const tmp = bar1.style.height;\r\n        bar1.style.height = bar2.style.height;\r\n        bar2.style.height = tmp; \r\n    }\r\n}\r\n\r\nexport default Visualizer;\r\n","import React from 'react';\nimport './App.css';\nimport Visualizer from './components/Visualizer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Visualizer></Visualizer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}